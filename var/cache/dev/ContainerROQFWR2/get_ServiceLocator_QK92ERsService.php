<?php

namespace ContainerROQFWR2;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_QK92ERsService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.qK92ERs' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.qK92ERs'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Controller\\BackController::index' => ['privates', '.service_locator.T1Cqnaw', 'get_ServiceLocator_T1CqnawService', true],
            'App\\Controller\\ClientsController::suppressionClient' => ['privates', '.service_locator._sqIFxE', 'get_ServiceLocator_SqIFxEService', true],
            'App\\Controller\\MetierController::suppressionMetier' => ['privates', '.service_locator.fPva_Ka', 'get_ServiceLocator_FPvaKaService', true],
            'App\\Controller\\ProjetController::suppressionProjet' => ['privates', '.service_locator.0Vaziks', 'get_ServiceLocator_0VaziksService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Controller\\BackController:index' => ['privates', '.service_locator.T1Cqnaw', 'get_ServiceLocator_T1CqnawService', true],
            'App\\Controller\\ClientsController:suppressionClient' => ['privates', '.service_locator._sqIFxE', 'get_ServiceLocator_SqIFxEService', true],
            'App\\Controller\\MetierController:suppressionMetier' => ['privates', '.service_locator.fPva_Ka', 'get_ServiceLocator_FPvaKaService', true],
            'App\\Controller\\ProjetController:suppressionProjet' => ['privates', '.service_locator.0Vaziks', 'get_ServiceLocator_0VaziksService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
        ], [
            'App\\Controller\\BackController::index' => '?',
            'App\\Controller\\ClientsController::suppressionClient' => '?',
            'App\\Controller\\MetierController::suppressionMetier' => '?',
            'App\\Controller\\ProjetController::suppressionProjet' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'App\\Controller\\BackController:index' => '?',
            'App\\Controller\\ClientsController:suppressionClient' => '?',
            'App\\Controller\\MetierController:suppressionMetier' => '?',
            'App\\Controller\\ProjetController:suppressionProjet' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
        ]);
    }
}
